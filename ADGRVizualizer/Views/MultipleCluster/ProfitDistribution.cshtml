@model (SelectListItem, SelectListItem, List<SimpleReportViewModel>)
@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Item3.Select(x => x.DimensionOne).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Item3.Select(x => x.Quantity).ToList());
    ViewData["Title"] = "ProfitDistibution";
}

<h1>ProfitDistibution</h1>
<form asp-controller="MultipleCluster" asp-action="DistributeChangeCluster" asp-route-returnUrl="@Context.Request.Path" method="post" class="form-horizontal">
    <select name="clusterId" onchange="this.form.submit();" asp-for="Item1.Value" asp-items="ViewBag.Clusters"></select>
</form>
<form asp-controller="MultipleCluster" asp-action="ChangeDate" asp-route-returnUrl="@Context.Request.Path" method="post" class="form-horizontal">
    <select name="date" onchange="this.form.submit();" asp-for="Item2.Value" asp-items="ViewBag.Dates"></select>
</form>
@if (Model.Item3.Count == 0)
{
    <h1>Sorry, for this date and cluster we can't provide info:(</h1>
}
else
{
    <div class="box-body">

        <div class="chart-container">
            <canvas id="chart" style="width:100%; height:900px"></canvas>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

    <script type="text/javascript">

        $(function () {
    var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(XLabels),
                datasets: [{
                    label: "Drinks Chart",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues)
    }]
            };

var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

       var myChart = new  Chart(ctx, {
                options: options,
                data: data,
                type:'pie'

            });
        });
    </script>
}

